package Epsilon5;
option java_outer_classname = "Protocol";
option java_package = "com.epsilon5.client.network";

enum Weapon {
    Pistol = 0;
    Machinegun = 1;
    Shotgun = 2;
    Grenade = 3;
}

message Player {
    required int32 id = 1;

    required int32 x = 2;
    required int32 y = 3;

    optional double vx = 4;
    optional double vy = 5;

    optional double angle = 6;
    optional string name = 7;
    optional uint32 hp = 8;
    required bool team = 9;
    optional uint32 ping = 10;

    required bool isActive = 11;
}

message Bullet {
    required int32 x = 1;
    required int32 y = 2;

    optional double vx = 3;
    optional double vy = 4;
    enum Type {
        ARBUZ = 0;
        LITTLE_BULLET = 1;
        ROCKET = 2;
        GRENADE = 3;
    }
    optional Type bullet_type = 5 [default = ARBUZ];
    required bool team = 6;
}

message Object {
    required int32 id = 1;

    required int32 x = 2;
    required int32 y = 3;
    required double angle = 4;
}
message Vehicle {
    required int32 id = 1;
    required int32 x = 2;
    required int32 y = 3;
    required double angle = 4;
    optional int32 playerId = 5;
}
message RespPoint {
    required int32 x = 1;
    required int32 y = 2;
    required int32 team = 3;
    required bool is_main = 4;
}

message PlayerStat {
    required int32 id = 1;
    required int32 score = 2;
    required int32 kills = 3;
    required int32 deaths = 4;
}

message PlayerInfo {
    optional int32 id = 1;
    optional string map = 2;
    optional int32 weapon = 3;
    optional int32 bullets = 4;
    optional int32 cage = 5;
}

message World {
    repeated Player players = 1;
    repeated Bullet bullets = 2;
    repeated Object objects = 3;
    repeated Vehicle vehicles = 4;
    repeated RespPoint resp_points = 5;
    required uint32 packet_number = 6;
    repeated PlayerStat players_stat = 7;
    optional PlayerInfo player_info = 8;
}

message Control {
    message KeyStatus {
        required bool keyUp = 1;
        required bool keyDown = 2;
        required bool keyLeft = 3;
        required bool keyRight = 4;

        required bool keyAttack1 = 5;
        required bool keyAttack2 = 6;
        required bool keyEnter = 7;
    }

    required KeyStatus keyStatus = 1;
    required double angle = 2;
    required Weapon weapon = 3;
    required uint32 packet_number = 4;
    optional bool need_full = 5;
}

message Auth {
    required string name = 1;
    optional string password = 2;
}
